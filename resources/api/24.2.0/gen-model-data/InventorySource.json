{
  "package_name": "awx",
  "api_version": "24.2.0",
  "endpoint": "/api/v2/inventory_sources/",
  "enabled": true,
  "name": "InventorySource",
  "read_properties": {
    "credential": {
      "name": "credential",
      "label": "Credential",
      "description": "Cloud credential to use for inventory updates.",
      "type": "integer",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Credential",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Credential.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "description": {
      "name": "description",
      "label": "Description",
      "description": "Optional description of this inventory source.",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Description",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Description.ValueString()",
        "attribute_type": "String"
      }
    },
    "enabled_value": {
      "name": "enabled_value",
      "label": "Enabled value",
      "description": "Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var=\"status.power_state\"and enabled_value=\"powered_on\" with host variables:{   \"status\": {     \"power_state\": \"powered_on\",     \"created\": \"2020-08-04T18:13:04+00:00\",     \"healthy\": true    },    \"name\": \"foobar\",    \"ip_address\": \"192.168.2.1\"}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported. If the key is not found then the host will be enabled",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "EnabledValue",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.EnabledValue.ValueString()",
        "attribute_type": "String"
      }
    },
    "enabled_var": {
      "name": "enabled_var",
      "label": "Enabled var",
      "description": "Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as \"foo.bar\", in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get(\"foo\", {}).get(\"bar\", default)",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "EnabledVar",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.EnabledVar.ValueString()",
        "attribute_type": "String"
      }
    },
    "execution_environment": {
      "name": "execution_environment",
      "label": "Execution environment",
      "description": "The container image to be used for execution.",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "ExecutionEnvironment",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.ExecutionEnvironment.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "host_filter": {
      "name": "host_filter",
      "label": "Host filter",
      "description": "This field is deprecated and will be removed in a future release. Regex where only matching hosts will be imported.",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "HostFilter",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.HostFilter.ValueString()",
        "attribute_type": "String"
      }
    },
    "id": {
      "name": "id",
      "label": "ID",
      "description": "Database ID for this inventory source.",
      "type": "integer",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "ID",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.ID.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "inventory": {
      "name": "inventory",
      "label": "Inventory",
      "description": "",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Inventory",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Inventory.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "limit": {
      "name": "limit",
      "label": "Limit",
      "description": "Enter host, group or pattern match",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Limit",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Limit.ValueString()",
        "attribute_type": "String"
      }
    },
    "name": {
      "name": "name",
      "label": "Name",
      "description": "Name of this inventory source.",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Name",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Name.ValueString()",
        "attribute_type": "String"
      }
    },
    "overwrite": {
      "name": "overwrite",
      "label": "Overwrite",
      "description": "Overwrite local groups and hosts from remote inventory source.",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "Overwrite",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.Overwrite.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "overwrite_vars": {
      "name": "overwrite_vars",
      "label": "Overwrite vars",
      "description": "Overwrite local variables from remote inventory source.",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "OverwriteVars",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.OverwriteVars.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "scm_branch": {
      "name": "scm_branch",
      "label": "Scm branch",
      "description": "Inventory source SCM branch. Project default used if blank. Only allowed if project allow_override field is set to true.",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "ScmBranch",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.ScmBranch.ValueString()",
        "attribute_type": "String"
      }
    },
    "source": {
      "name": "source",
      "label": "Source",
      "description": "",
      "type": "choice",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Source",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Source.ValueString()",
        "attribute_type": "String"
      }
    },
    "source_path": {
      "name": "source_path",
      "label": "Source path",
      "description": "",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "SourcePath",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.SourcePath.ValueString()",
        "attribute_type": "String"
      }
    },
    "source_project": {
      "name": "source_project",
      "label": "Source project",
      "description": "Project containing inventory file used as source.",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "SourceProject",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.SourceProject.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "source_vars": {
      "name": "source_vars",
      "label": "Source vars",
      "description": "Inventory source variables in YAML or JSON format.",
      "type": "json",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": true,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "SourceVars",
        "body_request_model_type": "json.RawMessage",
        "tf_go_primitive_value": "String",
        "model_body_request_value": "json.RawMessage(o.SourceVars.String())",
        "attribute_type": "String"
      }
    },
    "timeout": {
      "name": "timeout",
      "label": "Timeout",
      "description": "The amount of time (in seconds) to run before the task is canceled.",
      "type": "integer",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Timeout",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Timeout.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "update_cache_timeout": {
      "name": "update_cache_timeout",
      "label": "Update cache timeout",
      "description": "",
      "type": "integer",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "UpdateCacheTimeout",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.UpdateCacheTimeout.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "update_on_launch": {
      "name": "update_on_launch",
      "label": "Update on launch",
      "description": "",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "UpdateOnLaunch",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.UpdateOnLaunch.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "verbosity": {
      "name": "verbosity",
      "label": "Verbosity",
      "description": "",
      "type": "choice",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": true,
      "is_type_write": false,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Verbosity",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Verbosity.ValueString()",
        "attribute_type": "String"
      }
    }
  },
  "write_properties": {
    "credential": {
      "name": "credential",
      "label": "Credential",
      "description": "Cloud credential to use for inventory updates.",
      "type": "integer",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Credential",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Credential.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "description": {
      "name": "description",
      "label": "Description",
      "description": "Optional description of this inventory source.",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Description",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Description.ValueString()",
        "attribute_type": "String"
      }
    },
    "enabled_value": {
      "name": "enabled_value",
      "label": "Enabled value",
      "description": "Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var=\"status.power_state\"and enabled_value=\"powered_on\" with host variables:{   \"status\": {     \"power_state\": \"powered_on\",     \"created\": \"2020-08-04T18:13:04+00:00\",     \"healthy\": true    },    \"name\": \"foobar\",    \"ip_address\": \"192.168.2.1\"}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported. If the key is not found then the host will be enabled",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "EnabledValue",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.EnabledValue.ValueString()",
        "attribute_type": "String"
      }
    },
    "enabled_var": {
      "name": "enabled_var",
      "label": "Enabled var",
      "description": "Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as \"foo.bar\", in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get(\"foo\", {}).get(\"bar\", default)",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "EnabledVar",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.EnabledVar.ValueString()",
        "attribute_type": "String"
      }
    },
    "execution_environment": {
      "name": "execution_environment",
      "label": "Execution environment",
      "description": "The container image to be used for execution.",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "ExecutionEnvironment",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.ExecutionEnvironment.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "host_filter": {
      "name": "host_filter",
      "label": "Host filter",
      "description": "This field is deprecated and will be removed in a future release. Regex where only matching hosts will be imported.",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "HostFilter",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.HostFilter.ValueString()",
        "attribute_type": "String"
      }
    },
    "inventory": {
      "name": "inventory",
      "label": "Inventory",
      "description": "",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": true,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": false,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Inventory",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Inventory.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "limit": {
      "name": "limit",
      "label": "Limit",
      "description": "Enter host, group or pattern match",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Limit",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Limit.ValueString()",
        "attribute_type": "String"
      }
    },
    "name": {
      "name": "name",
      "label": "Name",
      "description": "Name of this inventory source.",
      "type": "string",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": true,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": false,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Name",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Name.ValueString()",
        "attribute_type": "String"
      }
    },
    "overwrite": {
      "name": "overwrite",
      "label": "Overwrite",
      "description": "Overwrite local groups and hosts from remote inventory source.",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "Overwrite",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.Overwrite.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "overwrite_vars": {
      "name": "overwrite_vars",
      "label": "Overwrite vars",
      "description": "Overwrite local variables from remote inventory source.",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "OverwriteVars",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.OverwriteVars.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "scm_branch": {
      "name": "scm_branch",
      "label": "Scm branch",
      "description": "Inventory source SCM branch. Project default used if blank. Only allowed if project allow_override field is set to true.",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "ScmBranch",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.ScmBranch.ValueString()",
        "attribute_type": "String"
      }
    },
    "source": {
      "name": "source",
      "label": "Source",
      "description": "",
      "type": "choice",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Source",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Source.ValueString()",
        "attribute_type": "String"
      }
    },
    "source_path": {
      "name": "source_path",
      "label": "Source path",
      "description": "",
      "type": "string",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "SourcePath",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.SourcePath.ValueString()",
        "attribute_type": "String"
      }
    },
    "source_project": {
      "name": "source_project",
      "label": "Source project",
      "description": "Project containing inventory file used as source.",
      "type": "id",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "SourceProject",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.SourceProject.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "source_vars": {
      "name": "source_vars",
      "label": "Source vars",
      "description": "Inventory source variables in YAML or JSON format.",
      "type": "json",
      "default_value": "stringdefault.StaticString(``)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": true,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "SourceVars",
        "body_request_model_type": "json.RawMessage",
        "tf_go_primitive_value": "String",
        "model_body_request_value": "json.RawMessage(o.SourceVars.String())",
        "attribute_type": "String"
      }
    },
    "timeout": {
      "name": "timeout",
      "label": "Timeout",
      "description": "The amount of time (in seconds) to run before the task is canceled.",
      "type": "integer",
      "default_value": "int64default.StaticInt64(0)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "Timeout",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.Timeout.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "update_cache_timeout": {
      "name": "update_cache_timeout",
      "label": "Update cache timeout",
      "description": "",
      "type": "integer",
      "default_value": "int64default.StaticInt64(0)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Int64",
        "awx_go_value": "types.Int64Value",
        "property_name": "UpdateCacheTimeout",
        "body_request_model_type": "int64",
        "tf_go_primitive_value": "ValueInt64",
        "model_body_request_value": "o.UpdateCacheTimeout.ValueInt64()",
        "attribute_type": "Int64"
      }
    },
    "update_on_launch": {
      "name": "update_on_launch",
      "label": "Update on launch",
      "description": "",
      "type": "boolean",
      "default_value": "",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.Bool",
        "awx_go_value": "types.BoolValue",
        "property_name": "UpdateOnLaunch",
        "body_request_model_type": "bool",
        "tf_go_primitive_value": "ValueBool",
        "model_body_request_value": "o.UpdateOnLaunch.ValueBool()",
        "attribute_type": "Bool"
      }
    },
    "verbosity": {
      "name": "verbosity",
      "label": "Verbosity",
      "description": "",
      "type": "choice",
      "default_value": "stringdefault.StaticString(`1`)",
      "element_type": "",
      "is_sensitive": false,
      "is_required": false,
      "is_write_only": false,
      "is_read_only": false,
      "is_computed": true,
      "is_type_read": false,
      "is_type_write": true,
      "post_wrap": false,
      "trim": false,
      "generated": {
        "awx_go_type": "types.String",
        "awx_go_value": "types.StringValue",
        "property_name": "Verbosity",
        "body_request_model_type": "string",
        "tf_go_primitive_value": "ValueString",
        "model_body_request_value": "o.Verbosity.ValueString()",
        "attribute_type": "String"
      }
    }
  }
}