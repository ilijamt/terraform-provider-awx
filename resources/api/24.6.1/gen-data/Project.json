{
  "ApiVersion": "24.6.1",
  "Config": {
    "endpoint": "/api/v2/projects/",
    "name": "Project",
    "type_name": "project",
    "id_key": "id",
    "search_fields": [
      {
        "url_suffix": "%d/",
        "name": "by_id",
        "fields": [
          {
            "name": "id"
          }
        ]
      }
    ],
    "enabled": true,
    "has_object_roles": true,
    "has_survey_spec": false,
    "associate_disassociate_groups": null,
    "field_constraints": null,
    "skip_write_only": false,
    "undeletable": false,
    "pre_state_set_hook_function": "",
    "no_id": false,
    "no_terraform_data_source": false,
    "no_terraform_resource": false,
    "api_property_resource_key": "POST",
    "api_property_data_key": "GET",
    "property_name_leave_as_is": false,
    "api_data_override": null,
    "remove_fields_data_source": [
      "custom_virtualenv",
      "status",
      "scm_revision"
    ],
    "remove_fields_resource": [
      "custom_virtualenv",
      "status",
      "scm_revision"
    ],
    "credential_types": null
  },
  "Description": "# List Projects:\n\nMake a GET request to this resource to retrieve the list of\nprojects.\n\nThe resulting data structure contains:\n\n    {\n        \"count\": 99,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            ...\n        ]\n    }\n\nThe `count` field indicates the total number of projects\nfound for the given query.  The `next` and `previous` fields provides links to\nadditional results if there are more than will fit on a single page.  The\n`results` list contains zero or more project records.  \n\n## Results\n\nEach project data structure includes the following fields:\n\n* `id`: Database ID for this project. (integer)\n* `type`: Data type for this project. (choice)\n* `url`: URL for this project. (string)\n* `related`: Data structure with URLs of related resources. (object)\n* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)\n* `created`: Timestamp when this project was created. (datetime)\n* `modified`: Timestamp when this project was last modified. (datetime)\n* `name`: Name of this project. (string)\n* `description`: Optional description of this project. (string)\n* `local_path`: Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project. (string)\n* `scm_type`: Specifies the source control system used to store the project. (choice)\n    - `\"\"`: Manual\n    - `git`: Git\n    - `svn`: Subversion\n    - `insights`: Red Hat Insights\n    - `archive`: Remote Archive\n* `scm_url`: The location where the project is stored. (string)\n* `scm_branch`: Specific branch, tag or commit to checkout. (string)\n* `scm_refspec`: For git projects, an additional refspec to fetch. (string)\n* `scm_clean`: Discard any local changes before syncing the project. (boolean)\n* `scm_track_submodules`: Track submodules latest commits on defined branch. (boolean)\n* `scm_delete_on_update`: Delete the project before syncing. (boolean)\n* `credential`:  (id)\n* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)\n* `scm_revision`: The last revision fetched by a project update (string)\n* `last_job_run`:  (datetime)\n* `last_job_failed`:  (boolean)\n* `next_job_run`:  (datetime)\n* `status`:  (choice)\n    - `new`: New\n    - `pending`: Pending\n    - `waiting`: Waiting\n    - `running`: Running\n    - `successful`: Successful\n    - `failed`: Failed\n    - `error`: Error\n    - `canceled`: Canceled\n    - `never updated`: Never Updated\n    - `ok`: OK\n    - `missing`: Missing\n* `organization`: The organization used to determine access to this template. (id)\n* `scm_update_on_launch`: Update the project when a job is launched that uses the project. (boolean)\n* `scm_update_cache_timeout`: The number of seconds after the last project update ran that a new project update will be launched as a job dependency. (integer)\n* `allow_override`: Allow changing the SCM branch or revision in a job template that uses this project. (boolean)\n* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)\n* `default_environment`: The default execution environment for jobs run using this project. (id)\n* `signature_validation_credential`: An optional credential used for validating files in the project against unexpected changes. (id)\n* `last_update_failed`:  (boolean)\n* `last_updated`:  (datetime)\n\n\n\n## Sorting\n\nTo specify that projects are returned in a particular\norder, use the `order_by` query string parameter on the GET request.\n\n    ?order_by=name\n\nPrefix the field name with a dash `-` to sort in reverse:\n\n    ?order_by=-name\n\nMultiple sorting fields may be specified by separating the field names with a\ncomma `,`:\n\n    ?order_by=name,some_other_field\n\n## Pagination\n\nUse the `page_size` query string parameter to change the number of results\nreturned for each request.  Use the `page` query string parameter to retrieve\na particular page of results.\n\n    ?page_size=100\u0026page=2\n\nThe `previous` and `next` links returned with the results will set these query\nstring parameters automatically.\n\n## Searching\n\nUse the `search` query string parameter to perform a case-insensitive search\nwithin all designated text fields of a model.\n\n    ?search=findme\n\n(_Added in Ansible Tower 3.1.0_) Search across related fields:\n\n    ?related__search=findme\n\nNote: If you want to provide more than one search term, multiple\nsearch fields with the same key, like `?related__search=foo\u0026related__search=bar`,\nwill be ORed together. Terms separated by commas, like `?related__search=foo,bar`\nwill be ANDed together.\n\n## Filtering\n\nAny additional query string parameters may be used to filter the list of\nresults returned to those matching a given value.  Only fields and relations\nthat exist in the database may be used for filtering.  Any special characters\nin the specified value should be url-encoded. For example:\n\n    ?field=value%20xyz\n\nFields may also span relations, only for fields and relationships defined in\nthe database:\n\n    ?other__field=value\n\nTo exclude results matching certain criteria, prefix the field parameter with\n`not__`:\n\n    ?not__field=value\n\nBy default, all query string filters are AND'ed together, so\nonly the results matching *all* filters will be returned.  To combine results\nmatching *any* one of multiple criteria, prefix each query string parameter\nwith `or__`:\n\n    ?or__field=value\u0026or__field=othervalue\n    ?or__not__field=value\u0026or__field=othervalue\n\n(_Added in Ansible Tower 1.4.5_) The default AND filtering applies all filters\nsimultaneously to each related object being filtered across database\nrelationships.  The chain filter instead applies filters separately for each\nrelated object. To use, prefix the query string parameter with `chain__`:\n\n    ?chain__related__field=value\u0026chain__related__field2=othervalue\n    ?chain__not__related__field=value\u0026chain__related__field2=othervalue\n\nIf the first query above were written as\n`?related__field=value\u0026related__field2=othervalue`, it would return only the\nprimary objects where the *same* related object satisfied both conditions.  As\nwritten using the chain filter, it would return the intersection of primary\nobjects matching each condition.\n\nField lookups may also be used for more advanced queries, by appending the\nlookup to the field name:\n\n    ?field__lookup=value\n\nThe following field lookups are supported:\n\n* `exact`: Exact match (default lookup if not specified).\n* `iexact`: Case-insensitive version of `exact`.\n* `contains`: Field contains value.\n* `icontains`: Case-insensitive version of `contains`.\n* `startswith`: Field starts with value.\n* `istartswith`: Case-insensitive version of `startswith`.\n* `endswith`: Field ends with value.\n* `iendswith`: Case-insensitive version of `endswith`.\n* `regex`: Field matches the given regular expression.\n* `iregex`: Case-insensitive version of `regex`.\n* `gt`: Greater than comparison.\n* `gte`: Greater than or equal to comparison.\n* `lt`: Less than comparison.\n* `lte`: Less than or equal to comparison.\n* `isnull`: Check whether the given field or related object is null; expects a\n  boolean value.\n* `in`: Check whether the given field's value is present in the list provided;\n  expects a list of items.\n\nBoolean values may be specified as `True` or `1` for true, `False` or `0` for\nfalse (both case-insensitive).\n\nNull values may be specified as `None` or `Null` (both case-insensitive),\nthough it is preferred to use the `isnull` lookup to explicitly check for null\nvalues.\n\nLists (for the `in` lookup) may be specified as a comma-separated list of\nvalues.\n\n(_Added in Ansible Tower 3.1.0_) Filtering based on the requesting user's\nlevel of access by query string parameter.\n\n* `role_level`: Level of role to filter on, such as `admin_role`\n\n\n\n\n# Create a Project:\n\nMake a POST request to this resource with the following project\nfields to create a new project:\n\n\n\n\n\n\n\n\n\n* `name`: Name of this project. (string, required)\n* `description`: Optional description of this project. (string, default=`\"\"`)\n* `local_path`: Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project. (string, default=`\"\"`)\n* `scm_type`: Specifies the source control system used to store the project. (choice)\n    - `\"\"`: Manual (default)\n    - `git`: Git\n    - `svn`: Subversion\n    - `insights`: Red Hat Insights\n    - `archive`: Remote Archive\n* `scm_url`: The location where the project is stored. (string, default=`\"\"`)\n* `scm_branch`: Specific branch, tag or commit to checkout. (string, default=`\"\"`)\n* `scm_refspec`: For git projects, an additional refspec to fetch. (string, default=`\"\"`)\n* `scm_clean`: Discard any local changes before syncing the project. (boolean, default=`False`)\n* `scm_track_submodules`: Track submodules latest commits on defined branch. (boolean, default=`False`)\n* `scm_delete_on_update`: Delete the project before syncing. (boolean, default=`False`)\n* `credential`:  (id, default=``)\n* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer, default=`0`)\n\n\n\n\n\n* `organization`: The organization used to determine access to this template. (id, default=``)\n* `scm_update_on_launch`: Update the project when a job is launched that uses the project. (boolean, default=`False`)\n* `scm_update_cache_timeout`: The number of seconds after the last project update ran that a new project update will be launched as a job dependency. (integer, default=`0`)\n* `allow_override`: Allow changing the SCM branch or revision in a job template that uses this project. (boolean, default=`False`)\n\n* `default_environment`: The default execution environment for jobs run using this project. (id, default=``)\n* `signature_validation_credential`: An optional credential used for validating files in the project against unexpected changes. (id, default=``)",
  "Endpoint": "/api/v2/projects/",
  "Name": "Project",
  "PackageName": "awx",
  "PropertyGetData": {
    "allow_override": {
      "computed": true,
      "filterable": true,
      "help_text": "Allow changing the SCM branch or revision in a job template that uses this project.",
      "hidden": false,
      "label": "Allow override",
      "name": "allow_override",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "credential": {
      "computed": true,
      "filterable": true,
      "hidden": false,
      "label": "Credential",
      "name": "credential",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "default_environment": {
      "computed": true,
      "filterable": true,
      "help_text": "The default execution environment for jobs run using this project.",
      "hidden": false,
      "label": "Default environment",
      "name": "default_environment",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "description": {
      "computed": true,
      "filterable": true,
      "help_text": "Optional description of this project.",
      "hidden": false,
      "label": "Description",
      "name": "description",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "id": {
      "computed": true,
      "filterable": true,
      "help_text": "Database ID for this project.",
      "hidden": false,
      "label": "ID",
      "name": "id",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "local_path": {
      "computed": true,
      "filterable": true,
      "help_text": "Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.",
      "hidden": false,
      "label": "Local path",
      "name": "local_path",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "name": {
      "computed": true,
      "filterable": true,
      "help_text": "Name of this project.",
      "hidden": false,
      "label": "Name",
      "name": "name",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "organization": {
      "computed": true,
      "filterable": true,
      "help_text": "The organization used to determine access to this template.",
      "hidden": false,
      "label": "Organization",
      "name": "organization",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "scm_branch": {
      "computed": true,
      "filterable": true,
      "help_text": "Specific branch, tag or commit to checkout.",
      "hidden": false,
      "label": "SCM Branch",
      "name": "scm_branch",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "scm_clean": {
      "computed": true,
      "filterable": true,
      "help_text": "Discard any local changes before syncing the project.",
      "hidden": false,
      "label": "Scm clean",
      "name": "scm_clean",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_delete_on_update": {
      "computed": true,
      "filterable": true,
      "help_text": "Delete the project before syncing.",
      "hidden": false,
      "label": "Scm delete on update",
      "name": "scm_delete_on_update",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_refspec": {
      "computed": true,
      "filterable": true,
      "help_text": "For git projects, an additional refspec to fetch.",
      "hidden": false,
      "label": "SCM refspec",
      "name": "scm_refspec",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "scm_track_submodules": {
      "computed": true,
      "filterable": true,
      "help_text": "Track submodules latest commits on defined branch.",
      "hidden": false,
      "label": "Scm track submodules",
      "name": "scm_track_submodules",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_type": {
      "choices": [
        [
          "",
          "Manual"
        ],
        [
          "git",
          "Git"
        ],
        [
          "svn",
          "Subversion"
        ],
        [
          "insights",
          "Red Hat Insights"
        ],
        [
          "archive",
          "Remote Archive"
        ]
      ],
      "computed": true,
      "filterable": true,
      "help_text": "Specifies the source control system used to store the project.",
      "hidden": false,
      "label": "SCM Type",
      "name": "scm_type",
      "required": false,
      "sensitive": false,
      "type": "choice"
    },
    "scm_update_cache_timeout": {
      "computed": true,
      "filterable": true,
      "help_text": "The number of seconds after the last project update ran that a new project update will be launched as a job dependency.",
      "hidden": false,
      "label": "Scm update cache timeout",
      "max_value": 2147483647,
      "min_value": 0,
      "name": "scm_update_cache_timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "scm_update_on_launch": {
      "computed": true,
      "filterable": true,
      "help_text": "Update the project when a job is launched that uses the project.",
      "hidden": false,
      "label": "Scm update on launch",
      "name": "scm_update_on_launch",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_url": {
      "computed": true,
      "filterable": true,
      "help_text": "The location where the project is stored.",
      "hidden": false,
      "label": "SCM URL",
      "name": "scm_url",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "signature_validation_credential": {
      "computed": true,
      "filterable": true,
      "help_text": "An optional credential used for validating files in the project against unexpected changes.",
      "hidden": false,
      "label": "Signature validation credential",
      "name": "signature_validation_credential",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "timeout": {
      "computed": true,
      "filterable": true,
      "help_text": "The amount of time (in seconds) to run before the task is canceled.",
      "hidden": false,
      "label": "Timeout",
      "max_value": 2147483647,
      "min_value": -2147483648,
      "name": "timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    }
  },
  "PropertyGetKeys": [
    "allow_override",
    "credential",
    "default_environment",
    "description",
    "id",
    "local_path",
    "name",
    "organization",
    "scm_branch",
    "scm_clean",
    "scm_delete_on_update",
    "scm_refspec",
    "scm_track_submodules",
    "scm_type",
    "scm_update_cache_timeout",
    "scm_update_on_launch",
    "scm_url",
    "signature_validation_credential",
    "timeout"
  ],
  "PropertyPostData": {
    "allow_override": {
      "computed": true,
      "default": false,
      "filterable": true,
      "help_text": "Allow changing the SCM branch or revision in a job template that uses this project.",
      "hidden": false,
      "label": "Allow override",
      "name": "allow_override",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "credential": {
      "computed": true,
      "filterable": true,
      "hidden": false,
      "label": "Credential",
      "name": "credential",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "default_environment": {
      "computed": true,
      "filterable": true,
      "help_text": "The default execution environment for jobs run using this project.",
      "hidden": false,
      "label": "Default environment",
      "name": "default_environment",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "description": {
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "Optional description of this project.",
      "hidden": false,
      "label": "Description",
      "name": "description",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "local_path": {
      "computed": true,
      "filterable": true,
      "help_text": "Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.",
      "hidden": false,
      "label": "Local path",
      "max_length": 1024,
      "name": "local_path",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "name": {
      "computed": false,
      "filterable": true,
      "help_text": "Name of this project.",
      "hidden": false,
      "label": "Name",
      "max_length": 512,
      "name": "name",
      "required": true,
      "sensitive": false,
      "type": "string"
    },
    "organization": {
      "computed": true,
      "filterable": true,
      "help_text": "The organization used to determine access to this template.",
      "hidden": false,
      "label": "Organization",
      "name": "organization",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "scm_branch": {
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "Specific branch, tag or commit to checkout.",
      "hidden": false,
      "label": "SCM Branch",
      "max_length": 256,
      "name": "scm_branch",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "scm_clean": {
      "computed": true,
      "default": false,
      "filterable": true,
      "help_text": "Discard any local changes before syncing the project.",
      "hidden": false,
      "label": "Scm clean",
      "name": "scm_clean",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_delete_on_update": {
      "computed": true,
      "default": false,
      "filterable": true,
      "help_text": "Delete the project before syncing.",
      "hidden": false,
      "label": "Scm delete on update",
      "name": "scm_delete_on_update",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_refspec": {
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "For git projects, an additional refspec to fetch.",
      "hidden": false,
      "label": "SCM refspec",
      "max_length": 1024,
      "name": "scm_refspec",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "scm_track_submodules": {
      "computed": true,
      "default": false,
      "filterable": true,
      "help_text": "Track submodules latest commits on defined branch.",
      "hidden": false,
      "label": "Scm track submodules",
      "name": "scm_track_submodules",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_type": {
      "choices": [
        [
          "",
          "Manual"
        ],
        [
          "git",
          "Git"
        ],
        [
          "svn",
          "Subversion"
        ],
        [
          "insights",
          "Red Hat Insights"
        ],
        [
          "archive",
          "Remote Archive"
        ]
      ],
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "Specifies the source control system used to store the project.",
      "hidden": false,
      "label": "SCM Type",
      "name": "scm_type",
      "required": false,
      "sensitive": false,
      "type": "choice"
    },
    "scm_update_cache_timeout": {
      "computed": true,
      "default": 0,
      "default_value": "int64default.StaticInt64(0)",
      "filterable": true,
      "help_text": "The number of seconds after the last project update ran that a new project update will be launched as a job dependency.",
      "hidden": false,
      "label": "Scm update cache timeout",
      "max_value": 2147483647,
      "min_value": 0,
      "name": "scm_update_cache_timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "scm_update_on_launch": {
      "computed": true,
      "default": false,
      "filterable": true,
      "help_text": "Update the project when a job is launched that uses the project.",
      "hidden": false,
      "label": "Scm update on launch",
      "name": "scm_update_on_launch",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "scm_url": {
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "The location where the project is stored.",
      "hidden": false,
      "label": "SCM URL",
      "max_length": 1024,
      "name": "scm_url",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "signature_validation_credential": {
      "computed": true,
      "filterable": true,
      "help_text": "An optional credential used for validating files in the project against unexpected changes.",
      "hidden": false,
      "label": "Signature validation credential",
      "name": "signature_validation_credential",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "timeout": {
      "computed": true,
      "default": 0,
      "default_value": "int64default.StaticInt64(0)",
      "filterable": true,
      "help_text": "The amount of time (in seconds) to run before the task is canceled.",
      "hidden": false,
      "label": "Timeout",
      "max_value": 2147483647,
      "min_value": -2147483648,
      "name": "timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    }
  },
  "PropertyPostKeys": [
    "allow_override",
    "credential",
    "default_environment",
    "description",
    "local_path",
    "name",
    "organization",
    "scm_branch",
    "scm_clean",
    "scm_delete_on_update",
    "scm_refspec",
    "scm_track_submodules",
    "scm_type",
    "scm_update_cache_timeout",
    "scm_update_on_launch",
    "scm_url",
    "signature_validation_credential",
    "timeout"
  ],
  "PropertyWriteOnlyData": {},
  "PropertyWriteOnlyKeys": null
}