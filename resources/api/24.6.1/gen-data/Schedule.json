{
  "ApiVersion": "24.6.1",
  "Config": {
    "endpoint": "/api/v2/schedules/",
    "name": "Schedule",
    "type_name": "schedule",
    "id_key": "id",
    "property_overrides": {
      "timezone": {
        "type": "string",
        "description": "",
        "sensitive": false,
        "required": false,
        "trim": false,
        "post_wrap": false,
        "default_value": "",
        "element_type": ""
      },
      "until": {
        "type": "string",
        "description": "",
        "sensitive": false,
        "required": false,
        "trim": false,
        "post_wrap": false,
        "default_value": "",
        "element_type": ""
      }
    },
    "search_fields": [
      {
        "url_suffix": "%d/",
        "name": "by_id",
        "fields": [
          {
            "name": "id"
          }
        ]
      }
    ],
    "enabled": true,
    "has_object_roles": false,
    "has_survey_spec": false,
    "associate_disassociate_groups": null,
    "field_constraints": null,
    "skip_write_only": false,
    "undeletable": false,
    "pre_state_set_hook_function": "",
    "no_id": false,
    "no_terraform_data_source": false,
    "no_terraform_resource": false,
    "api_property_resource_key": "POST",
    "api_property_data_key": "GET",
    "property_name_leave_as_is": false,
    "api_data_override": null,
    "remove_fields_data_source": null,
    "remove_fields_resource": null,
    "credential_types": null
  },
  "Description": "# List Schedules:\n\nMake a GET request to this resource to retrieve the list of\nschedules.\n\nThe resulting data structure contains:\n\n    {\n        \"count\": 99,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            ...\n        ]\n    }\n\nThe `count` field indicates the total number of schedules\nfound for the given query.  The `next` and `previous` fields provides links to\nadditional results if there are more than will fit on a single page.  The\n`results` list contains zero or more schedule records.  \n\n## Results\n\nEach schedule data structure includes the following fields:\n\n* `rrule`: A value representing the schedules iCal recurrence rule. (string)\n* `id`: Database ID for this schedule. (integer)\n* `type`: Data type for this schedule. (choice)\n* `url`: URL for this schedule. (string)\n* `related`: Data structure with URLs of related resources. (object)\n* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)\n* `created`: Timestamp when this schedule was created. (datetime)\n* `modified`: Timestamp when this schedule was last modified. (datetime)\n* `name`: Name of this schedule. (string)\n* `description`: Optional description of this schedule. (string)\n* `extra_data`:  (json)\n* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)\n* `scm_branch`:  (string)\n* `job_type`:  (choice)\n    - `None`: ---------\n    - `\"\"`: ---------\n    - `run`: Run\n    - `check`: Check\n* `job_tags`:  (string)\n* `skip_tags`:  (string)\n* `limit`:  (string)\n* `diff_mode`:  (boolean)\n* `verbosity`:  (choice)\n    - `None`: ---------\n    - `0`: 0 (Normal)\n    - `1`: 1 (Verbose)\n    - `2`: 2 (More Verbose)\n    - `3`: 3 (Debug)\n    - `4`: 4 (Connection Debug)\n    - `5`: 5 (WinRM Debug)\n* `execution_environment`: The container image to be used for execution. (id)\n* `forks`:  (integer)\n* `job_slice_count`:  (integer)\n* `timeout`:  (integer)\n* `unified_job_template`:  (id)\n* `enabled`: Enables processing of this schedule. (boolean)\n* `dtstart`: The first occurrence of the schedule occurs on or after this time. (datetime)\n* `dtend`: The last occurrence of the schedule occurs before this time, aftewards the schedule expires. (datetime)\n* `next_run`: The next time that the scheduled action will run. (datetime)\n* `timezone`: The timezone this schedule runs in. This field is extracted from the RRULE. If the timezone in the RRULE is a link to another timezone, the link will be reflected in this field. (field)\n* `until`: The date this schedule will end. This field is computed from the RRULE. If the schedule does not end an empty string will be returned (field)\n\n\n\n## Sorting\n\nTo specify that schedules are returned in a particular\norder, use the `order_by` query string parameter on the GET request.\n\n    ?order_by=name\n\nPrefix the field name with a dash `-` to sort in reverse:\n\n    ?order_by=-name\n\nMultiple sorting fields may be specified by separating the field names with a\ncomma `,`:\n\n    ?order_by=name,some_other_field\n\n## Pagination\n\nUse the `page_size` query string parameter to change the number of results\nreturned for each request.  Use the `page` query string parameter to retrieve\na particular page of results.\n\n    ?page_size=100\u0026page=2\n\nThe `previous` and `next` links returned with the results will set these query\nstring parameters automatically.\n\n## Searching\n\nUse the `search` query string parameter to perform a case-insensitive search\nwithin all designated text fields of a model.\n\n    ?search=findme\n\n(_Added in Ansible Tower 3.1.0_) Search across related fields:\n\n    ?related__search=findme\n\nNote: If you want to provide more than one search term, multiple\nsearch fields with the same key, like `?related__search=foo\u0026related__search=bar`,\nwill be ORed together. Terms separated by commas, like `?related__search=foo,bar`\nwill be ANDed together.\n\n## Filtering\n\nAny additional query string parameters may be used to filter the list of\nresults returned to those matching a given value.  Only fields and relations\nthat exist in the database may be used for filtering.  Any special characters\nin the specified value should be url-encoded. For example:\n\n    ?field=value%20xyz\n\nFields may also span relations, only for fields and relationships defined in\nthe database:\n\n    ?other__field=value\n\nTo exclude results matching certain criteria, prefix the field parameter with\n`not__`:\n\n    ?not__field=value\n\nBy default, all query string filters are AND'ed together, so\nonly the results matching *all* filters will be returned.  To combine results\nmatching *any* one of multiple criteria, prefix each query string parameter\nwith `or__`:\n\n    ?or__field=value\u0026or__field=othervalue\n    ?or__not__field=value\u0026or__field=othervalue\n\n(_Added in Ansible Tower 1.4.5_) The default AND filtering applies all filters\nsimultaneously to each related object being filtered across database\nrelationships.  The chain filter instead applies filters separately for each\nrelated object. To use, prefix the query string parameter with `chain__`:\n\n    ?chain__related__field=value\u0026chain__related__field2=othervalue\n    ?chain__not__related__field=value\u0026chain__related__field2=othervalue\n\nIf the first query above were written as\n`?related__field=value\u0026related__field2=othervalue`, it would return only the\nprimary objects where the *same* related object satisfied both conditions.  As\nwritten using the chain filter, it would return the intersection of primary\nobjects matching each condition.\n\nField lookups may also be used for more advanced queries, by appending the\nlookup to the field name:\n\n    ?field__lookup=value\n\nThe following field lookups are supported:\n\n* `exact`: Exact match (default lookup if not specified).\n* `iexact`: Case-insensitive version of `exact`.\n* `contains`: Field contains value.\n* `icontains`: Case-insensitive version of `contains`.\n* `startswith`: Field starts with value.\n* `istartswith`: Case-insensitive version of `startswith`.\n* `endswith`: Field ends with value.\n* `iendswith`: Case-insensitive version of `endswith`.\n* `regex`: Field matches the given regular expression.\n* `iregex`: Case-insensitive version of `regex`.\n* `gt`: Greater than comparison.\n* `gte`: Greater than or equal to comparison.\n* `lt`: Less than comparison.\n* `lte`: Less than or equal to comparison.\n* `isnull`: Check whether the given field or related object is null; expects a\n  boolean value.\n* `in`: Check whether the given field's value is present in the list provided;\n  expects a list of items.\n\nBoolean values may be specified as `True` or `1` for true, `False` or `0` for\nfalse (both case-insensitive).\n\nNull values may be specified as `None` or `Null` (both case-insensitive),\nthough it is preferred to use the `isnull` lookup to explicitly check for null\nvalues.\n\nLists (for the `in` lookup) may be specified as a comma-separated list of\nvalues.\n\n(_Added in Ansible Tower 3.1.0_) Filtering based on the requesting user's\nlevel of access by query string parameter.\n\n* `role_level`: Level of role to filter on, such as `admin_role`\n\n\n\n\nSchedule Details\n================\nThe following lists the expected format and details of our rrules:\n\n* DTSTART is required and must follow the following format: DTSTART:YYYYMMDDTHHMMSSZ\n* DTSTART is expected to be in UTC\n* INTERVAL is required\n* SECONDLY is not supported\n* RRULE must precede the rule statements\n* BYDAY is supported but not BYDAY with a numerical prefix\n* BYYEARDAY and BYWEEKNO are not supported\n* Only one rrule statement per schedule is supported\n* COUNT must be \u003c 1000\n\nHere are some example rrules:\n\n    \"DTSTART:20500331T055000Z RRULE:FREQ=MINUTELY;INTERVAL=10;COUNT=5\"\n    \"DTSTART:20240331T075000Z RRULE:FREQ=DAILY;INTERVAL=1;COUNT=1\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=MINUTELY;INTERVAL=1;UNTIL=20230401T075000Z\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=WEEKLY;INTERVAL=5;BYDAY=MO\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=MONTHLY;INTERVAL=1;BYMONTHDAY=6\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=MONTHLY;INTERVAL=1;BYSETPOS=4;BYDAY=SU\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=MONTHLY;INTERVAL=1;BYSETPOS=-1;BYDAY=MO,TU,WE,TH,FR\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=MONTHLY;INTERVAL=1;BYSETPOS=-1;BYDAY=MO,TU,WE,TH,FR,SA,SU\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=YEARLY;INTERVAL=1;BYMONTH=4;BYMONTHDAY=1\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=YEARLY;INTERVAL=1;BYSETPOS=-1;BYMONTH=8;BYDAY=SU\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=WEEKLY;INTERVAL=1;UNTIL=20230401T075000Z;BYDAY=MO,WE,FR\"\n    \"DTSTART:20140331T075000Z RRULE:FREQ=HOURLY;INTERVAL=1;UNTIL=20230610T075000Z\"",
  "Endpoint": "/api/v2/schedules/",
  "Name": "Schedule",
  "PackageName": "awx",
  "PropertyGetData": {
    "description": {
      "computed": true,
      "filterable": true,
      "help_text": "Optional description of this schedule.",
      "hidden": false,
      "label": "Description",
      "name": "description",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "diff_mode": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Diff mode",
      "name": "diff_mode",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "dtend": {
      "computed": true,
      "filterable": true,
      "help_text": "The last occurrence of the schedule occurs before this time, aftewards the schedule expires.",
      "hidden": false,
      "label": "Dtend",
      "name": "dtend",
      "required": false,
      "sensitive": false,
      "type": "datetime"
    },
    "dtstart": {
      "computed": true,
      "filterable": true,
      "help_text": "The first occurrence of the schedule occurs on or after this time.",
      "hidden": false,
      "label": "Dtstart",
      "name": "dtstart",
      "required": false,
      "sensitive": false,
      "type": "datetime"
    },
    "enabled": {
      "computed": true,
      "filterable": true,
      "help_text": "Enables processing of this schedule.",
      "hidden": false,
      "label": "Enabled",
      "name": "enabled",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "execution_environment": {
      "computed": true,
      "filterable": true,
      "help_text": "The container image to be used for execution.",
      "hidden": false,
      "label": "Execution environment",
      "name": "execution_environment",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "extra_data": {
      "computed": true,
      "filterable": true,
      "hidden": false,
      "label": "Extra data",
      "name": "extra_data",
      "required": false,
      "sensitive": false,
      "type": "json"
    },
    "forks": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Forks",
      "min_value": 0,
      "name": "forks",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "id": {
      "computed": true,
      "filterable": true,
      "help_text": "Database ID for this schedule.",
      "hidden": false,
      "label": "ID",
      "name": "id",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "inventory": {
      "computed": true,
      "filterable": true,
      "help_text": "Inventory applied as a prompt, assuming job template prompts for inventory",
      "hidden": false,
      "label": "Inventory",
      "name": "inventory",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "job_slice_count": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Job slice count",
      "min_value": 0,
      "name": "job_slice_count",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "job_tags": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Job tags",
      "name": "job_tags",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "job_type": {
      "choices": [
        [
          null,
          "---------"
        ],
        [
          "",
          "---------"
        ],
        [
          "run",
          "Run"
        ],
        [
          "check",
          "Check"
        ]
      ],
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Job type",
      "name": "job_type",
      "required": false,
      "sensitive": false,
      "type": "choice"
    },
    "limit": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Limit",
      "name": "limit",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "name": {
      "computed": true,
      "filterable": true,
      "help_text": "Name of this schedule.",
      "hidden": false,
      "label": "Name",
      "name": "name",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "next_run": {
      "computed": true,
      "filterable": true,
      "help_text": "The next time that the scheduled action will run.",
      "hidden": false,
      "label": "Next run",
      "name": "next_run",
      "required": false,
      "sensitive": false,
      "type": "datetime"
    },
    "rrule": {
      "computed": true,
      "filterable": true,
      "help_text": "A value representing the schedules iCal recurrence rule.",
      "hidden": false,
      "label": "Rrule",
      "name": "rrule",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "scm_branch": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Scm branch",
      "name": "scm_branch",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "skip_tags": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Skip tags",
      "name": "skip_tags",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "timeout": {
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Timeout",
      "name": "timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "timezone": {
      "computed": true,
      "filterable": false,
      "help_text": "The timezone this schedule runs in. This field is extracted from the RRULE. If the timezone in the RRULE is a link to another timezone, the link will be reflected in this field.",
      "hidden": false,
      "label": "Timezone",
      "name": "timezone",
      "post_wrap": false,
      "required": false,
      "sensitive": false,
      "trim": false,
      "type": "string"
    },
    "unified_job_template": {
      "computed": true,
      "filterable": true,
      "hidden": false,
      "label": "Unified job template",
      "name": "unified_job_template",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "until": {
      "computed": true,
      "filterable": false,
      "help_text": "The date this schedule will end. This field is computed from the RRULE. If the schedule does not end an empty string will be returned",
      "hidden": false,
      "label": "Until",
      "name": "until",
      "post_wrap": false,
      "required": false,
      "sensitive": false,
      "trim": false,
      "type": "string"
    },
    "verbosity": {
      "choices": [
        [
          null,
          "---------"
        ],
        [
          0,
          "0 (Normal)"
        ],
        [
          1,
          "1 (Verbose)"
        ],
        [
          2,
          "2 (More Verbose)"
        ],
        [
          3,
          "3 (Debug)"
        ],
        [
          4,
          "4 (Connection Debug)"
        ],
        [
          5,
          "5 (WinRM Debug)"
        ]
      ],
      "computed": true,
      "filterable": false,
      "hidden": false,
      "label": "Verbosity",
      "name": "verbosity",
      "required": false,
      "sensitive": false,
      "type": "choice"
    }
  },
  "PropertyGetKeys": [
    "description",
    "diff_mode",
    "dtend",
    "dtstart",
    "enabled",
    "execution_environment",
    "extra_data",
    "forks",
    "id",
    "inventory",
    "job_slice_count",
    "job_tags",
    "job_type",
    "limit",
    "name",
    "next_run",
    "rrule",
    "scm_branch",
    "skip_tags",
    "timeout",
    "timezone",
    "unified_job_template",
    "until",
    "verbosity"
  ],
  "PropertyPostData": {
    "description": {
      "computed": true,
      "default": "",
      "default_value": "stringdefault.StaticString(``)",
      "filterable": true,
      "help_text": "Optional description of this schedule.",
      "hidden": false,
      "label": "Description",
      "name": "description",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "diff_mode": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Diff mode",
      "name": "diff_mode",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "enabled": {
      "computed": true,
      "default": true,
      "filterable": true,
      "help_text": "Enables processing of this schedule.",
      "hidden": false,
      "label": "Enabled",
      "name": "enabled",
      "required": false,
      "sensitive": false,
      "type": "boolean"
    },
    "execution_environment": {
      "computed": true,
      "filterable": true,
      "help_text": "The container image to be used for execution.",
      "hidden": false,
      "label": "Execution environment",
      "name": "execution_environment",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "extra_data": {
      "computed": true,
      "default": {},
      "default_value": "stringdefault.StaticString(`{}`)",
      "filterable": true,
      "hidden": false,
      "label": "Extra data",
      "name": "extra_data",
      "required": false,
      "sensitive": false,
      "type": "json"
    },
    "forks": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Forks",
      "min_value": 0,
      "name": "forks",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "inventory": {
      "computed": true,
      "filterable": true,
      "help_text": "Inventory applied as a prompt, assuming job template prompts for inventory",
      "hidden": false,
      "label": "Inventory",
      "name": "inventory",
      "required": false,
      "sensitive": false,
      "type": "id"
    },
    "job_slice_count": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Job slice count",
      "min_value": 0,
      "name": "job_slice_count",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "job_tags": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Job tags",
      "name": "job_tags",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "job_type": {
      "choices": [
        [
          null,
          "---------"
        ],
        [
          "",
          "---------"
        ],
        [
          "run",
          "Run"
        ],
        [
          "check",
          "Check"
        ]
      ],
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Job type",
      "name": "job_type",
      "required": false,
      "sensitive": false,
      "type": "choice"
    },
    "limit": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Limit",
      "name": "limit",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "name": {
      "computed": false,
      "filterable": true,
      "help_text": "Name of this schedule.",
      "hidden": false,
      "label": "Name",
      "max_length": 512,
      "name": "name",
      "required": true,
      "sensitive": false,
      "type": "string"
    },
    "rrule": {
      "computed": false,
      "filterable": true,
      "help_text": "A value representing the schedules iCal recurrence rule.",
      "hidden": false,
      "label": "Rrule",
      "name": "rrule",
      "required": true,
      "sensitive": false,
      "type": "string"
    },
    "scm_branch": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Scm branch",
      "name": "scm_branch",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "skip_tags": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Skip tags",
      "name": "skip_tags",
      "required": false,
      "sensitive": false,
      "type": "string"
    },
    "timeout": {
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Timeout",
      "name": "timeout",
      "required": false,
      "sensitive": false,
      "type": "integer"
    },
    "unified_job_template": {
      "computed": false,
      "filterable": true,
      "hidden": false,
      "label": "Unified job template",
      "name": "unified_job_template",
      "required": true,
      "sensitive": false,
      "type": "id"
    },
    "verbosity": {
      "choices": [
        [
          null,
          "---------"
        ],
        [
          0,
          "0 (Normal)"
        ],
        [
          1,
          "1 (Verbose)"
        ],
        [
          2,
          "2 (More Verbose)"
        ],
        [
          3,
          "3 (Debug)"
        ],
        [
          4,
          "4 (Connection Debug)"
        ],
        [
          5,
          "5 (WinRM Debug)"
        ]
      ],
      "computed": true,
      "default": null,
      "filterable": false,
      "hidden": false,
      "label": "Verbosity",
      "name": "verbosity",
      "required": false,
      "sensitive": false,
      "type": "choice"
    }
  },
  "PropertyPostKeys": [
    "description",
    "diff_mode",
    "enabled",
    "execution_environment",
    "extra_data",
    "forks",
    "inventory",
    "job_slice_count",
    "job_tags",
    "job_type",
    "limit",
    "name",
    "rrule",
    "scm_branch",
    "skip_tags",
    "timeout",
    "unified_job_template",
    "verbosity"
  ],
  "PropertyWriteOnlyData": {},
  "PropertyWriteOnlyKeys": null
}