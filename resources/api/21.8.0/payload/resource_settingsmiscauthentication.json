{
  "actions": {
    "GET": {
      "ALLOW_OAUTH2_FOR_EXTERNAL_USERS": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "For security reasons, users from external auth providers (LDAP, SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens. To change this behavior, enable this setting. Existing tokens will not be deleted when this setting is toggled off.",
        "label": "Allow External Users to Create OAuth2 Tokens",
        "type": "boolean"
      },
      "AUTHENTICATION_BACKENDS": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "type": "string"
        },
        "defined_in_file": false,
        "help_text": "List of authentication backends that are enabled based on license features and other authentication settings.",
        "label": "Authentication Backends",
        "type": "list"
      },
      "AUTH_BASIC_ENABLED": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "Enable HTTP Basic Auth for the API Browser.",
        "label": "Enable HTTP Basic Auth",
        "type": "boolean"
      },
      "DISABLE_LOCAL_AUTH": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "Controls whether users are prevented from using the built-in authentication system. You probably want to do this if you are using an LDAP or SAML integration.",
        "label": "Disable the built-in authentication system",
        "type": "boolean"
      },
      "LOGIN_REDIRECT_OVERRIDE": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "URL to which unauthorized users will be redirected to log in.  If blank, users will be sent to the login page.",
        "label": "Login redirect override URL",
        "type": "string"
      },
      "OAUTH2_PROVIDER": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "min_value": 1,
          "type": "integer"
        },
        "defined_in_file": false,
        "help_text": "Dictionary for customizing OAuth 2 timeouts, available items are `ACCESS_TOKEN_EXPIRE_SECONDS`, the duration of access tokens in the number of seconds, `AUTHORIZATION_CODE_EXPIRE_SECONDS`, the duration of authorization codes in the number of seconds, and `REFRESH_TOKEN_EXPIRE_SECONDS`, the duration of refresh tokens, after expired access tokens, in the number of seconds.",
        "label": "OAuth 2 Timeout Settings",
        "type": "nested object",
        "unit": "seconds"
      },
      "SESSIONS_PER_USER": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "Maximum number of simultaneous logged in sessions a user may have. To disable enter -1.",
        "label": "Maximum number of simultaneous logged in sessions",
        "min_value": -1,
        "type": "integer"
      },
      "SESSION_COOKIE_AGE": {
        "category": "Authentication",
        "category_slug": "authentication",
        "defined_in_file": false,
        "help_text": "Number of seconds that a user is inactive before they will need to login again.",
        "label": "Idle Time Force Log Out",
        "max_value": 30000000000,
        "min_value": 60,
        "type": "integer",
        "unit": "seconds"
      },
      "SOCIAL_AUTH_ORGANIZATION_MAP": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "child": {
            "read_only": false,
            "required": true,
            "type": "field"
          },
          "type": "nested object"
        },
        "defined_in_file": false,
        "help_text": "Mapping to organization admins/users from social auth accounts. This setting\ncontrols which users are placed into which organizations based on their\nusername and email address. Configuration details are available in the\ndocumentation.",
        "label": "Social Auth Organization Map",
        "type": "nested object"
      },
      "SOCIAL_AUTH_TEAM_MAP": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "child": {
            "read_only": false,
            "required": true,
            "type": "field"
          },
          "type": "nested object"
        },
        "defined_in_file": false,
        "help_text": "Mapping of team members (users) from social auth accounts. Configuration\ndetails are available in the documentation.",
        "label": "Social Auth Team Map",
        "type": "nested object"
      },
      "SOCIAL_AUTH_USER_FIELDS": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "type": "string"
        },
        "defined_in_file": false,
        "help_text": "When set to an empty list `[]`, this setting prevents new user accounts from being created. Only users who have previously logged in using social auth or have a user account with a matching email address will be able to login.",
        "label": "Social Auth User Fields",
        "type": "list"
      }
    },
    "PUT": {
      "ALLOW_OAUTH2_FOR_EXTERNAL_USERS": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": false,
        "help_text": "For security reasons, users from external auth providers (LDAP, SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens. To change this behavior, enable this setting. Existing tokens will not be deleted when this setting is toggled off.",
        "label": "Allow External Users to Create OAuth2 Tokens",
        "required": false,
        "type": "boolean"
      },
      "AUTH_BASIC_ENABLED": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": true,
        "help_text": "Enable HTTP Basic Auth for the API Browser.",
        "label": "Enable HTTP Basic Auth",
        "required": true,
        "type": "boolean"
      },
      "DISABLE_LOCAL_AUTH": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": false,
        "help_text": "Controls whether users are prevented from using the built-in authentication system. You probably want to do this if you are using an LDAP or SAML integration.",
        "label": "Disable the built-in authentication system",
        "required": true,
        "type": "boolean"
      },
      "LOGIN_REDIRECT_OVERRIDE": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": "",
        "help_text": "URL to which unauthorized users will be redirected to log in.  If blank, users will be sent to the login page.",
        "label": "Login redirect override URL",
        "required": false,
        "type": "string"
      },
      "OAUTH2_PROVIDER": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "min_value": 1,
          "read_only": false,
          "required": true,
          "type": "integer"
        },
        "default": {
          "ACCESS_TOKEN_EXPIRE_SECONDS": 31536000000,
          "AUTHORIZATION_CODE_EXPIRE_SECONDS": 600,
          "REFRESH_TOKEN_EXPIRE_SECONDS": 2628000
        },
        "help_text": "Dictionary for customizing OAuth 2 timeouts, available items are `ACCESS_TOKEN_EXPIRE_SECONDS`, the duration of access tokens in the number of seconds, `AUTHORIZATION_CODE_EXPIRE_SECONDS`, the duration of authorization codes in the number of seconds, and `REFRESH_TOKEN_EXPIRE_SECONDS`, the duration of refresh tokens, after expired access tokens, in the number of seconds.",
        "label": "OAuth 2 Timeout Settings",
        "required": false,
        "type": "nested object",
        "unit": "seconds"
      },
      "SESSIONS_PER_USER": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": -1,
        "help_text": "Maximum number of simultaneous logged in sessions a user may have. To disable enter -1.",
        "label": "Maximum number of simultaneous logged in sessions",
        "min_value": -1,
        "required": true,
        "type": "integer"
      },
      "SESSION_COOKIE_AGE": {
        "category": "Authentication",
        "category_slug": "authentication",
        "default": 1800,
        "help_text": "Number of seconds that a user is inactive before they will need to login again.",
        "label": "Idle Time Force Log Out",
        "max_value": 30000000000,
        "min_value": 60,
        "required": true,
        "type": "integer",
        "unit": "seconds"
      },
      "SOCIAL_AUTH_ORGANIZATION_MAP": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "child": {
            "read_only": false,
            "required": true,
            "type": "field"
          },
          "read_only": false,
          "required": true,
          "type": "nested object"
        },
        "default": null,
        "help_text": "Mapping to organization admins/users from social auth accounts. This setting\ncontrols which users are placed into which organizations based on their\nusername and email address. Configuration details are available in the\ndocumentation.",
        "label": "Social Auth Organization Map",
        "placeholder": {
          "Default": {
            "users": true
          },
          "Test Org": {
            "admins": [
              "admin@example.com"
            ],
            "auditors": [
              "auditor@example.com"
            ],
            "users": true
          },
          "Test Org 2": {
            "admins": [
              "admin@example.com",
              "/^tower-[^@]+*?@.*$/"
            ],
            "remove_admins": true,
            "remove_users": true,
            "users": "/^[^@].*?@example\\.com$/i"
          }
        },
        "required": false,
        "type": "nested object"
      },
      "SOCIAL_AUTH_TEAM_MAP": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "child": {
            "read_only": false,
            "required": true,
            "type": "field"
          },
          "read_only": false,
          "required": true,
          "type": "nested object"
        },
        "default": null,
        "help_text": "Mapping of team members (users) from social auth accounts. Configuration\ndetails are available in the documentation.",
        "label": "Social Auth Team Map",
        "placeholder": {
          "My Team": {
            "organization": "Test Org",
            "remove": true,
            "users": [
              "/^[^@]+?@test\\.example\\.com$/"
            ]
          },
          "Other Team": {
            "organization": "Test Org 2",
            "remove": false,
            "users": "/^[^@]+?@test2\\.example\\.com$/i"
          }
        },
        "required": false,
        "type": "nested object"
      },
      "SOCIAL_AUTH_USER_FIELDS": {
        "category": "Authentication",
        "category_slug": "authentication",
        "child": {
          "read_only": false,
          "required": true,
          "type": "string"
        },
        "default": null,
        "help_text": "When set to an empty list `[]`, this setting prevents new user accounts from being created. Only users who have previously logged in using social auth or have a user account with a matching email address will be able to login.",
        "label": "Social Auth User Fields",
        "placeholder": [
          "username",
          "email"
        ],
        "required": false,
        "type": "list"
      }
    }
  },
  "description": "# Retrieve a Setting:\n\nMake GET request to this resource to retrieve a single setting\nrecord containing the following fields:\n\n* `SESSION_COOKIE_AGE`: Number of seconds that a user is inactive before they will need to login again. (integer)\n* `SESSIONS_PER_USER`: Maximum number of simultaneous logged in sessions a user may have. To disable enter -1. (integer)\n* `DISABLE_LOCAL_AUTH`: Controls whether users are prevented from using the built-in authentication system. You probably want to do this if you are using an LDAP or SAML integration. (boolean)\n* `AUTH_BASIC_ENABLED`: Enable HTTP Basic Auth for the API Browser. (boolean)\n* `OAUTH2_PROVIDER`: Dictionary for customizing OAuth 2 timeouts, available items are `ACCESS_TOKEN_EXPIRE_SECONDS`, the duration of access tokens in the number of seconds, `AUTHORIZATION_CODE_EXPIRE_SECONDS`, the duration of authorization codes in the number of seconds, and `REFRESH_TOKEN_EXPIRE_SECONDS`, the duration of refresh tokens, after expired access tokens, in the number of seconds. (nested object)\n* `ALLOW_OAUTH2_FOR_EXTERNAL_USERS`: For security reasons, users from external auth providers (LDAP, SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens. To change this behavior, enable this setting. Existing tokens will not be deleted when this setting is toggled off. (boolean)\n* `LOGIN_REDIRECT_OVERRIDE`: URL to which unauthorized users will be redirected to log in.  If blank, users will be sent to the login page. (string)\n* `AUTHENTICATION_BACKENDS`: List of authentication backends that are enabled based on license features and other authentication settings. (list)\n* `SOCIAL_AUTH_ORGANIZATION_MAP`: Mapping to organization admins/users from social auth accounts. This setting\ncontrols which users are placed into which organizations based on their\nusername and email address. Configuration details are available in the\ndocumentation. (nested object)\n* `SOCIAL_AUTH_TEAM_MAP`: Mapping of team members (users) from social auth accounts. Configuration\ndetails are available in the documentation. (nested object)\n* `SOCIAL_AUTH_USER_FIELDS`: When set to an empty list `[]`, this setting prevents new user accounts from being created. Only users who have previously logged in using social auth or have a user account with a matching email address will be able to login. (list)\n\n\n\n\n\n# Update a Setting:\n\nMake a PUT or PATCH request to this resource to update this\nsetting.  The following fields may be modified:\n\n\n* `SESSION_COOKIE_AGE`: Number of seconds that a user is inactive before they will need to login again. (integer, required)\n* `SESSIONS_PER_USER`: Maximum number of simultaneous logged in sessions a user may have. To disable enter -1. (integer, required)\n* `DISABLE_LOCAL_AUTH`: Controls whether users are prevented from using the built-in authentication system. You probably want to do this if you are using an LDAP or SAML integration. (boolean, required)\n* `AUTH_BASIC_ENABLED`: Enable HTTP Basic Auth for the API Browser. (boolean, required)\n* `OAUTH2_PROVIDER`: Dictionary for customizing OAuth 2 timeouts, available items are `ACCESS_TOKEN_EXPIRE_SECONDS`, the duration of access tokens in the number of seconds, `AUTHORIZATION_CODE_EXPIRE_SECONDS`, the duration of authorization codes in the number of seconds, and `REFRESH_TOKEN_EXPIRE_SECONDS`, the duration of refresh tokens, after expired access tokens, in the number of seconds. (nested object, default=`{\u0026#x27;ACCESS_TOKEN_EXPIRE_SECONDS\u0026#x27;: 31536000000, \u0026#x27;AUTHORIZATION_CODE_EXPIRE_SECONDS\u0026#x27;: 600, \u0026#x27;REFRESH_TOKEN_EXPIRE_SECONDS\u0026#x27;: 2628000}`)\n* `ALLOW_OAUTH2_FOR_EXTERNAL_USERS`: For security reasons, users from external auth providers (LDAP, SAML, SSO, Radius, and others) are not allowed to create OAuth2 tokens. To change this behavior, enable this setting. Existing tokens will not be deleted when this setting is toggled off. (boolean, default=`False`)\n* `LOGIN_REDIRECT_OVERRIDE`: URL to which unauthorized users will be redirected to log in.  If blank, users will be sent to the login page. (string, default=`\"\"`)\n\n* `SOCIAL_AUTH_ORGANIZATION_MAP`: Mapping to organization admins/users from social auth accounts. This setting\ncontrols which users are placed into which organizations based on their\nusername and email address. Configuration details are available in the\ndocumentation. (nested object, default=`None`)\n* `SOCIAL_AUTH_TEAM_MAP`: Mapping of team members (users) from social auth accounts. Configuration\ndetails are available in the documentation. (nested object, default=`None`)\n* `SOCIAL_AUTH_USER_FIELDS`: When set to an empty list `[]`, this setting prevents new user accounts from being created. Only users who have previously logged in using social auth or have a user account with a matching email address will be able to login. (list, default=`None`)\n\n\n\n\n\n\nFor a PUT request, include **all** fields in the request.\n\n\n\nFor a PATCH request, include only the fields that are being modified.\n\n\n\n# Delete a Setting:\n\nMake a DELETE request to this resource to delete this setting.",
  "name": "Setting Detail",
  "parses": [
    "application/json"
  ],
  "renders": [
    "application/json",
    "text/html"
  ]
}
